name: Train and Deploy Model version 0.2

on:
  push: 
    tags:
      - 'v0.2*'

  pull_request:
    branches:
      - main
  
  workflow_dispatch:

env:
  VERSION: ${{ github.ref_name }}

permissions:
  contents: write
  packages: write

jobs:

  lint:
    name: Lint Code with Pylint
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') || startsWith(github.ref, 'refs/tags/')"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run Pylint
        run:
          pylint scripts/ --output-format=parseable > pylint-report.txt || true

  train-model:
    name: Train Model
    runs-on: ubuntu-latest
    needs: lint
    if: "!contains(github.event.head_commit.message, '[skip ci]') || startsWith(github.ref, 'refs/tags/')"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Train and save model
      run: python scripts/train_v0_2.py

    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: diabetes-model
        path: models/
    
  unit-test:
    name: Unit testing
    runs-on: ubuntu-latest
    needs: train-model
    if: "!contains(github.event.head_commit.message, '[skip ci]') || startsWith(github.ref, 'refs/tags/')"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest fastapi[all]
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run Unit Test
      run: pytest -v tests/

  container-smoke-test:
    name: Container Smoke Test
    runs-on: ubuntu-latest
    needs: unit-test
    if: "!contains(github.event.head_commit.message, '[skip ci]') || startsWith(github.ref, 'refs/tags/')"

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build Docker image
      run: docker build -f Dockerfiles/Dockerfile.v0.2 -t ${{ secrets.DOCKER_USERNAME }}/diabetes_progression:${{ env.VERSION }} .
    
    - name: Container Smoke Test
      run: |
        docker run -d -p 8686:8686 --name diabetes_app_test ${{ secrets.DOCKER_USERNAME }}/diabetes_progression:${{ env.VERSION }}
        sleep 5
        curl -f http://localhost:8686/health || (echo "Smoke test failed" && docker logs diabetes_app_test && exit 1)
        echo "Smoke test passed"
        docker rm -f diabetes_app_test
  
  deploy-container:

    name: Deploy Container to DockerHub, GHCR
    runs-on: ubuntu-latest
    needs: container-smoke-test
    if: "!contains(github.event.head_commit.message, '[skip ci]') || startsWith(github.ref, 'refs/tags/')"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download model artifact
      uses: actions/download-artifact@v4
      with:
        name: diabetes-model
        path: ./models/
        
    #DOCKER HUB
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Rebuild Docker image for deployment
      run: docker build -f Dockerfiles/Dockerfile.v0.2 -t ${{ secrets.DOCKER_USERNAME }}/diabetes_progression:${{ env.VERSION }} .
    
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/diabetes_progression:${{ env.VERSION }}

    # Github Container Registry

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag Docker image for GHCR
      run: docker tag ${{ secrets.DOCKER_USERNAME }}/diabetes_progression:${{ env.VERSION }} ghcr.io/${{ github.repository }}/diabetes_progression:${{ env.VERSION }}

    - name: Push Docker image to GHCR
      run: docker push ghcr.io/${{ github.repository }}/diabetes_progression:${{ env.VERSION }}

    # Upload model file to GitHub Release

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        name: Model ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload model artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./models/model_diabetes_v0.2.pkl
        asset_name: model_diabetes_v0.2.pkl
        asset_content_type: application/octet-stream